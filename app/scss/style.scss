$min-screen: 320px;
$mid-screen: 1000px;
$max-screen: 1366px;
$min-value: 18px;
$max-value: 28px;
$padding-wrapper: 1fr 10fr 1fr;
$padding-up-bottom: 1rem;

$color-main: #20232a;

@mixin interpolate($properties, $min-screen, $max-screen, $min-value, $max-value) {
	& {
		@each $property in $properties {
			#{$property}: $min-value;
		}

		@media screen and (min-width: $min-screen) {
			@each $property in $properties {
				#{$property}: calc-interpolation($min-screen, $min-value, $max-screen, $max-value);
			}
		}

		@media screen and (min-width: $max-screen) {
			@each $property in $properties {
				#{$property}: $max-value;
			}
		}
	}
}

// Requires the calc-interpolation function which can also be used independently

@function calc-interpolation($min-screen, $min-value, $max-screen, $max-value) {
	$a: ($max-value - $min-value) / ($max-screen - $min-screen);
	$b: $min-value - $a * $min-screen;

	$sign: "+";
	@if ($b < 0) {
		$sign: "-";
		$b: abs($b);
	}
	@return calc(#{$a*100}vw #{$sign} #{$b});
}


@keyframes rotate {
  100% {
    transform: rotateZ(360deg);
  }
}

html {
  @include interpolate(font-size, $min-screen, $max-screen, $min-value, $max-value);
}

body {
  background-color: $color-main;
	// background-color: #000;
  margin: 0;
  color: #fff;
  font-family: 'Poiret One', cursive;
}

/* Multiple properties with same values */
h1,h2,h3,h4,h5 {
	@include interpolate((padding-top, padding-bottom), 20rem, 70rem, 0rem, .5rem);
	text-align: center;
}

h1 {
	margin-bottom: 0.2em;
}

p  {
	margin-top: 0.2em;
  font-size: 1rem;
}

nav {
  margin: 0 auto;
  width: 70%;
  position: fixed;
  left: 0;
  right: 0;
  bottom: 1vh;
  z-index: 999;

  ul {
    position: relative;
  	display: flex;
    flex-direction: row;
    justify-content: center;

  	padding: 0;
  	list-style: none;
  	cursor: default;

    li {
      position: relative;
    	margin: 16px 16px;
    	width: 0.7em;
    	height: 0.7em;
    	cursor: pointer;

      a {
        top: 0;
      	left: 0;
      	width: 100%;
      	height: 100%;
      	outline: none;
      	border-radius: 50%;
      	background-color: #fff;
      	background-color: rgba(255,255,255,0.3);
      	text-indent: -999em;
      	cursor: pointer; /* make the text accessible to screen readers */
      	position: absolute;
        font-size: 0.4rem;

        overflow: hidden;
      	background-color: rgba(0,0,0,0);
      	box-shadow: inset 0 0 0 2px rgba(255,255,255,1);
      	transition: background 0.2s;

        &:after {
          content: '';
        	position: absolute;
        	bottom: 0;
        	height: 0;
        	left: 0;
        	width: 100%;
        	background-color: #fff;
        	box-shadow: 0 0 1px #fff;
        	transition: height 0.1s;
        }

        &:hover {
          background-color: rgba(0,0,0,0.2);
        }

        &.active {
          background-color: #fff;
        }
      }
    }
  }
}

@import "index.scss";
